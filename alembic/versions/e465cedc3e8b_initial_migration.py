"""Initial migration

Revision ID: e465cedc3e8b
Revises: 
Create Date: 2025-09-17 16:55:42.735745

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'e465cedc3e8b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_sources',
    sa.Column('source_id', sa.Uuid(), nullable=False),
    sa.Column('source_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('source_id'),
    sa.UniqueConstraint('source_name')
    )
    op.create_table('sectors',
    sa.Column('sector_id', sa.Uuid(), nullable=False),
    sa.Column('sector_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('sector_id'),
    sa.UniqueConstraint('sector_name')
    )
    op.create_table('tenants',
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('tenant_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('tenant_id'),
    sa.UniqueConstraint('tenant_name')
    )
    op.create_table('user',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('default_fields',
    sa.Column('field_id', sa.Uuid(), nullable=False),
    sa.Column('sector_id', sa.Uuid(), nullable=False),
    sa.Column('field_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('data_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sector_id'], ['sectors.sector_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('field_id')
    )
    op.create_table('raw_data',
    sa.Column('data_id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('source_id', sa.Uuid(), nullable=False),
    sa.Column('data_payload', sa.JSON(), nullable=True),
    sa.Column('extracted_data', sa.JSON(), nullable=True),
    sa.Column('data_hash', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.Column('processing_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('created_timestamp', sa.DateTime(), nullable=True),
    sa.Column('processed_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('data_id')
    )
    op.create_table('tenant_data_sources',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('source_id', sa.Uuid(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['data_sources.source_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mapped_values',
    sa.Column('mapped_id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('data_id', sa.Uuid(), nullable=False),
    sa.Column('field_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('mapped_value', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('data_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['data_id'], ['raw_data.data_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('mapped_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mapped_values')
    op.drop_table('tenant_data_sources')
    op.drop_table('raw_data')
    op.drop_table('default_fields')
    op.drop_table('user')
    op.drop_table('tenants')
    op.drop_table('sectors')
    op.drop_table('data_sources')
    # ### end Alembic commands ###
